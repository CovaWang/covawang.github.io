[{"content":"1. 标题测试 (Headings) Heading 1: 最大标题 这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。\nHeading 2: 文章主节标题 Heading 3: 小节标题 Heading 4: 更小的标题 Heading 5: 最小的标题 Heading 6: 几乎不用的标题 2. 文本样式与段落 这是一个粗体文本的示例。 这是一个斜体文本的示例。 这是一个删除线文本的示例。 您可以将它们组合起来使用。\n这是一个新段落。Markdown 渲染引擎应该正确地处理段落之间的空行。\n这是一个引用块（Blockquote）的示例。它支持 粗体、链接 和 斜体 等 Markdown 语法。\n来自《Rusty Typewriter 主题示例》 3. 链接 (Links) 这是一个指向 Hugo 官方网站 的外部链接。\n这是一个指向本站文章列表的相对路径链接：Posts 页面。\n4. 列表 (Lists) 有序列表 第一个项目 第二个项目 嵌套的子项目 A 嵌套的子项目 B 第三个项目 无序列表 无序项目 1 无序项目 2 嵌套的子项目 i 嵌套的子项目 ii 无序项目 3 5. 代码块 (Code) 行内代码 (Inline Code) 行内代码看起来像这样：`inline-code-example`。它使用了不同的字体和背景色。\n代码块 (Code Block) 代码块支持语法高亮（例如 Go 语言）：\n```go package main\nimport \u0026ldquo;fmt\u0026rdquo;\nfunc main() { fmt.Println(\u0026ldquo;Hello, Hugo!\u0026rdquo;) } ```\n也可以是 TOML 配置文件示例： ```toml title = \u0026lsquo;Markdown 测试\u0026rsquo; theme = \u0026lsquo;rusty-typewriter\u0026rsquo; languageCode = \u0026lsquo;zh-CN\u0026rsquo; ```\n6. 表格 (Tables) 表格展示了文本对齐方式：\n标题 1 (左对齐) 标题 2 (居中对齐) 标题 3 (右对齐) 左对齐数据 居中数据 右对齐数据 Row 2 Data Data Data Row 3 Data Data Data 7. 图片和附件 (Images \u0026amp; Attachments) 这是一个本地图片（头像）的示例：\n（该图片文件位于您项目的 /static/images/ 目录下，因此在 Markdown 中使用 /images/filename.png 引用）\n关于文件附件的说明 如果您想测试文件附件的显示，您需要将此文章转换为 Page Bundle：\n在 blog/content/posts/ 下创建一个名为 markdown-test 的新文件夹。 将上述 Markdown 内容重命名为 index.md 并放入该文件夹。 将附件文件（例如 PDF、ZIP 文件）也放入 markdown-test 文件夹中。 Rusty Typewriter 主题的单页侧边栏（layouts/partials/side/single.html）有一个逻辑，可以列出 Page Bundle 中的文件资源作为附件（Attachments）。它们会显示在 Attachments (附件) 标题下。\n","date":"30 October, 2025","id":0,"permalink":"/posts/test/","summary":"这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。","tags":"markdown fisrtthingsfirst showcase","title":"Markdown TEST"},{"content":"1. 标题测试 (Headings) Heading 1: 最大标题 这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。\nHeading 2: 文章主节标题 Heading 3: 小节标题 Heading 4: 更小的标题 Heading 5: 最小的标题 Heading 6: 几乎不用的标题 2. 文本样式与段落 这是一个粗体文本的示例。 这是一个斜体文本的示例。 这是一个删除线文本的示例。 您可以将它们组合起来使用。\n这是一个新段落。Markdown 渲染引擎应该正确地处理段落之间的空行。\n这是一个引用块（Blockquote）的示例。它支持 粗体、链接 和 斜体 等 Markdown 语法。\n来自《Rusty Typewriter 主题示例》 3. 链接 (Links) 这是一个指向 Hugo 官方网站 的外部链接。\n这是一个指向本站文章列表的相对路径链接：Posts 页面。\n4. 列表 (Lists) 有序列表 第一个项目 第二个项目 嵌套的子项目 A 嵌套的子项目 B 第三个项目 无序列表 无序项目 1 无序项目 2 嵌套的子项目 i 嵌套的子项目 ii 无序项目 3 5. 代码块 (Code) 行内代码 (Inline Code) 行内代码看起来像这样：`inline-code-example`。它使用了不同的字体和背景色。\n代码块 (Code Block) 代码块支持语法高亮（例如 Go 语言）：\n```go package main\nimport \u0026ldquo;fmt\u0026rdquo;\nfunc main() { fmt.Println(\u0026ldquo;Hello, Hugo!\u0026rdquo;) } ```\n也可以是 TOML 配置文件示例： ```toml title = \u0026lsquo;Markdown 测试\u0026rsquo; theme = \u0026lsquo;rusty-typewriter\u0026rsquo; languageCode = \u0026lsquo;zh-CN\u0026rsquo; ```\n6. 表格 (Tables) 表格展示了文本对齐方式：\n标题 1 (左对齐) 标题 2 (居中对齐) 标题 3 (右对齐) 左对齐数据 居中数据 右对齐数据 Row 2 Data Data Data Row 3 Data Data Data 7. 图片和附件 (Images \u0026amp; Attachments) 这是一个本地图片（头像）的示例：\n（该图片文件位于您项目的 /static/images/ 目录下，因此在 Markdown 中使用 /images/filename.png 引用）\n关于文件附件的说明 如果您想测试文件附件的显示，您需要将此文章转换为 Page Bundle：\n在 blog/content/posts/ 下创建一个名为 markdown-test 的新文件夹。 将上述 Markdown 内容重命名为 index.md 并放入该文件夹。 将附件文件（例如 PDF、ZIP 文件）也放入 markdown-test 文件夹中。 Rusty Typewriter 主题的单页侧边栏（layouts/partials/side/single.html）有一个逻辑，可以列出 Page Bundle 中的文件资源作为附件（Attachments）。它们会显示在 Attachments (附件) 标题下。\n","date":"30 October, 2025","id":0,"permalink":"/posts/test/","summary":"这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。","tags":"markdown fisrtthingsfirst showcase","title":"Markdown TEST"},{"content":"1. 标题测试 (Headings) Heading 1: 最大标题 这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。\nHeading 2: 文章主节标题 Heading 3: 小节标题 Heading 4: 更小的标题 Heading 5: 最小的标题 Heading 6: 几乎不用的标题 2. 文本样式与段落 这是一个粗体文本的示例。 这是一个斜体文本的示例。 这是一个删除线文本的示例。 您可以将它们组合起来使用。\n这是一个新段落。Markdown 渲染引擎应该正确地处理段落之间的空行。\n这是一个引用块（Blockquote）的示例。它支持 粗体、链接 和 斜体 等 Markdown 语法。\n来自《Rusty Typewriter 主题示例》 3. 链接 (Links) 这是一个指向 Hugo 官方网站 的外部链接。\n这是一个指向本站文章列表的相对路径链接：Posts 页面。\n4. 列表 (Lists) 有序列表 第一个项目 第二个项目 嵌套的子项目 A 嵌套的子项目 B 第三个项目 无序列表 无序项目 1 无序项目 2 嵌套的子项目 i 嵌套的子项目 ii 无序项目 3 5. 代码块 (Code) 行内代码 (Inline Code) 行内代码看起来像这样：`inline-code-example`。它使用了不同的字体和背景色。\n代码块 (Code Block) 代码块支持语法高亮（例如 Go 语言）：\n```go package main\nimport \u0026ldquo;fmt\u0026rdquo;\nfunc main() { fmt.Println(\u0026ldquo;Hello, Hugo!\u0026rdquo;) } ```\n也可以是 TOML 配置文件示例： ```toml title = \u0026lsquo;Markdown 测试\u0026rsquo; theme = \u0026lsquo;rusty-typewriter\u0026rsquo; languageCode = \u0026lsquo;zh-CN\u0026rsquo; ```\n6. 表格 (Tables) 表格展示了文本对齐方式：\n标题 1 (左对齐) 标题 2 (居中对齐) 标题 3 (右对齐) 左对齐数据 居中数据 右对齐数据 Row 2 Data Data Data Row 3 Data Data Data 7. 图片和附件 (Images \u0026amp; Attachments) 这是一个本地图片（头像）的示例：\n（该图片文件位于您项目的 /static/images/ 目录下，因此在 Markdown 中使用 /images/filename.png 引用）\n关于文件附件的说明 如果您想测试文件附件的显示，您需要将此文章转换为 Page Bundle：\n在 blog/content/posts/ 下创建一个名为 markdown-test 的新文件夹。 将上述 Markdown 内容重命名为 index.md 并放入该文件夹。 将附件文件（例如 PDF、ZIP 文件）也放入 markdown-test 文件夹中。 Rusty Typewriter 主题的单页侧边栏（layouts/partials/side/single.html）有一个逻辑，可以列出 Page Bundle 中的文件资源作为附件（Attachments）。它们会显示在 Attachments (附件) 标题下。\n","date":"30 October, 2025","id":0,"permalink":"/posts/test/","summary":"这是 H1 标题下的普通段落，用于展示 Markdown 元素的渲染效果。","tags":"markdown fisrtthingsfirst showcase","title":"Markdown TEST"}]